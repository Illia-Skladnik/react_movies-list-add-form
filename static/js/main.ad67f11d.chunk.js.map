{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","validUrl","setValidUrl","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","nameToCheck","urlValue","trim","includes","test","NewMovie","props","onAdd","count","setCount","setTitle","setDescription","imageUrl","setImageUrl","setImdbUrl","setImdbId","onSubmit","preventDefault","imgUrlData","imdbUrlData","imdbIdData","disabled","App","moviesFromServer","movieList","setMovieList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad67f11d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const [validUrl, setValidUrl] = useState(true);\n  const hasError = touched && required && !value;\n\n  const isUrlValid = (nameToCheck: string, urlValue: string) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (nameToCheck.includes('Url')) {\n      setValidUrl(pattern.test(urlValue));\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => {\n            onChange(event.target.value);\n          }}\n          onBlur={(event) => {\n            onChange(event.target.value.trim());\n            setToched(true);\n            isUrlValid(name, event.target.value);\n          }}\n        />\n      </div>\n\n      {(hasError || !validUrl) && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\nexport const NewMovie = (props: Props) => {\n  const { onAdd } = props;\n\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const clearMovieStates = () => {\n    setTitle('');\n    setDescription('');\n    setImageUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const movie = {\n    title,\n    description,\n    imgUrl: imageUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const areFieldsFilled = () => !(title && imageUrl && imdbUrl && imdbId);\n  const handleMovieEvent = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onAdd(movie);\n    setCount(count + 1);\n    clearMovieStates();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleMovieEvent}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imageUrl}\n        onChange={(imgUrlData) => setImageUrl(imgUrlData)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(imdbUrlData) => setImdbUrl(imdbUrlData)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(imdbIdData) => setImdbId(imdbIdData)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={areFieldsFilled()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movieList, setMovieList] = useState([...moviesFromServer]);\n\n  const onAdd = (movie: Movie) => setMovieList([...movieList, movie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movieList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}